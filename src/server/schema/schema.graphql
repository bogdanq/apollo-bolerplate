extend type Query {
  partnersProgram: PartnersProgramQuery!
}

type PartnersProgramQuery {
  generalInformation: GeneralInformation!
  termsAndConditions: String!
  privacyPolicy: String!
  cookiesPolicy: String!
  faq: String!
  contacts: String!
  news: NewsQuery!
  campaigns: [Campaign!]!
}

type GeneralInformation {
  partnerProgramCompanyName: String!
  siteAddress: String!
  email: String!
  skype: String!
  telegramm: String
  verificationTags: String!
  trackingScripts: String!
  androidAppLinks: String
  IOSAppLinks: String
  copyrightPeriodStart: String!
  showPresentation: Boolean!
  agentSiteInformation: AgentSiteInformation!
  stylesTheme: StylesTheme!
  minimalPayments: String!
  dictionary: String!
  landingCurrencyName: String!
  seoScriptsAndTags: SEOSctiptsAndTags!
}

type AgentSiteInformation {
  companyName: String!
  siteAddress: String!
  emailSupport: String!
}

type SEOSctiptsAndTags {
  verificationTags: String
  trackingScripts: String
  successfullLoginScript: String
  unsuccessfullLoginScript: String
  successfullRegistrationScript: String
  unsuccessfullRegistrationScript: String
}

# параметры стилей и картинки, и все что относится к теме
type StylesTheme {
  brandColor: String!
}

type NewsQuery {
  getNewsList(params: GetNewsListParams!): GetNewsListResponse!
  getActualNews(params: GetNewsParams!): GetNewsListResponse!
  getCurrentNews(params: GetNewsParams!): GetCurrentNewsResponse!
}

type Campaign {
  #id кампании
  id: String!
  #имя кампании
  name: String!
  currency: Int!
}

type GetNewsListResponse {
  statusID: ReportStatus!
  news: [GetNewsListResponseNews!]
}

type GetCurrentNewsResponse {
  statusID: ReportStatus!
  news: GetNewsListResponseNews
}

type GetNewsListResponseNews {
  id: Int!
  title: String!
  image: String!
  PImage: String!
  shortText: String!
  mainText: String
  url: String!
  isVisible: Boolean!
  date: String!
  datePublick: String!
}

input GetNewsListParams {
  culture: String!
  typeNews: String!
}

input GetNewsParams {
  culture: String!
  newsId: String!
}

enum ReportStatus {
  PENDING
  SUCCESS
  ERROR
}
